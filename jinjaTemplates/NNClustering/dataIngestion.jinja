#Data Ingestion
{% if dataset == "Iris" %}
iris = load_iris()
X = iris['data']
y = iris['target']
names = iris['target_names']
output_dim = len(names)
feature_names = iris['feature_names']
{% endif %}
{% if dataset == "Spiral" %}
#spiral
column_names = ['0', '1', 'target']
df = pd.read_csv("datasets/spiral.csv", names = column_names,  header = None)
X = pd.DataFrame(df, columns=['0', '1'])
y = pd.DataFrame(df, columns=['target'])
y = df['target']
names = ['1', '2', '3']
output_dim = len(names)
feature_names = ['0', '1']
y = torch.tensor(df['target'].values)
y = y-1
y
{% endif %}
{% if dataset == "Aggregation" %}
#Aggregation
column_names = ['0', '1', 'target']
df = pd.read_csv("datasets/Aggregation.csv", names = column_names,  header = None)
X = pd.DataFrame(df, columns=['0', '1'])
y = pd.DataFrame(df, columns=['target'])
y = df['target']
names = ['1', '2', '3', '4', '5', '6', '7']
output_dim = len(names)
feature_names = ['0', '1']
y = torch.tensor(df['target'].values)
y = y-1
y
{% endif %}
{% if dataset == "R15" %}
#R15
column_names = ['0', '1', 'target']
df = pd.read_csv("datasets/R15.csv", names = column_names,  header = None)
X = pd.DataFrame(df, columns=['0', '1'])
y = pd.DataFrame(df, columns=['target'])
y = df['target']
names = ['1', '2', '3', '4', '5', '6', '7', '8']
output_dim = len(names)
feature_names = ['0', '1']
y = torch.tensor(df['target'].values)
y = y-1
y
{% endif %}
{% if dataset == "User" %}
#User Data --> insert file path below and add column_names and names = number_outputClasses
# feature names can stay as 0/1 or custom labels
column_names = ['0', '1', 'target']
df = pd.read_csv("datasets/.csv", names = column_names,  header = None)
X = pd.DataFrame(df, columns=['0', '1'])
y = pd.DataFrame(df, columns=['target'])
y = df['target']
names = ['1', '2', '3']
output_dim = len(names)
feature_names = ['0', '1']
y = torch.tensor(df['target'].values)
y = y-1
y
{% endif %}